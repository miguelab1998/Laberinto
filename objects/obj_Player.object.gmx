<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;
Key_Black = false;
Key_Red = false;
Key_Gold = false;
Key_Purple = false;
Key_Silver = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimiento del jugador

if (keyboard_check(vk_left))
    {
    if (!place_meeting(x-velocidad, y, obj_Wall_Parent))&amp;&amp;
    (!place_meeting(x-velocidad, y, obj_Door_Parent))&amp;&amp;
    (!place_meeting(x-velocidad, y, obj_Magic_Door))
    {x = x - velocidad;}
    }
    
if (keyboard_check(vk_right))
    {
    if (!place_meeting(x+velocidad, y, obj_Wall_Parent))&amp;&amp;
    (!place_meeting(x+velocidad, y, obj_Door_Parent))&amp;&amp;
    (!place_meeting(x+velocidad, y, obj_Magic_Door))
    {x = x + velocidad;}
    }
    
if (keyboard_check(vk_up))
    {
    if (!place_meeting(x, y-velocidad, obj_Wall_Parent))&amp;&amp;
    (!place_meeting(x, y-velocidad, obj_Door_Parent))&amp;&amp;
    (!place_meeting(x, y-velocidad, obj_Magic_Door))
    {y = y - velocidad;}
    }
    
if (keyboard_check(vk_down))
    {
    if(!place_meeting(x, y+velocidad, obj_Wall_Parent))&amp;&amp;
    (!place_meeting(x, y+velocidad, obj_Door_Parent))&amp;&amp;
    (!place_meeting(x, y+velocidad, obj_Magic_Door))
    {y = y + velocidad;}
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gestión de llaves

/* con place_meeting se verificará la colisión con las llaves en cuyo caso 
    se destruirá la llave correspondiente y se cambiará el valor respectivo
    a true 
    */

if (place_meeting(x, y, obj_Key_Black))
    {
    with(obj_Key_Black){instance_destroy();}
    Key_Black = true;
    audio_play_sound(snd_Diamond, 10, false);
    }

if (place_meeting(x, y, obj_Key_Red))
    {
    with(obj_Key_Red){instance_destroy();}
    Key_Red = true;
    audio_play_sound(snd_Diamond, 10, false);
    }

if (place_meeting(x, y, obj_Key_Gold))
    {
    with(obj_Key_Gold){instance_destroy();}
    Key_Gold = true;
    audio_play_sound(snd_Diamond, 10, false);
    }
    
if (place_meeting(x, y, obj_Key_Purple))
    {
    with(obj_Key_Purple){instance_destroy();}
    Key_Purple = true;
    audio_play_sound(snd_Diamond, 10, false);
    }
    
if (place_meeting(x, y, obj_Key_Silver))
    {
    with(obj_Key_Silver){instance_destroy();}
    Key_Silver = true;
    audio_play_sound(snd_Diamond, 10, false);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gestión de puertas

/* Se verificarán inicialmente los valores de las variables. Si son verdaderos
    se procederá a destruir la puerta
    */
    
if (Key_Black)
    {
    if (place_meeting(x+velocidad, y, obj_Door_Black))||
    (place_meeting(x-velocidad, y, obj_Door_Black))||
    (place_meeting(x, y+velocidad, obj_Door_Black))||
    (place_meeting(x, y-velocidad, obj_Door_Black))
        {
        with (obj_Door_Black){instance_destroy();}
        audio_play_sound(snd_Door, 10, false);
        }
    }
    
if (Key_Red)
    {
    if (place_meeting(x+velocidad, y, obj_Door_Red))||
    (place_meeting(x-velocidad, y, obj_Door_Red))||
    (place_meeting(x, y+velocidad, obj_Door_Red))||
    (place_meeting(x, y-velocidad, obj_Door_Red))
        {
        with (obj_Door_Red){instance_destroy();}
        audio_play_sound(snd_Door, 10, false);
        }
    }
    
if (Key_Gold)
    {
    if (place_meeting(x+velocidad, y, obj_Door_Gold))||
    (place_meeting(x-velocidad, y, obj_Door_Gold))||
    (place_meeting(x, y+velocidad, obj_Door_Gold))||
    (place_meeting(x, y-velocidad, obj_Door_Gold))
        {
        with (obj_Door_Gold){instance_destroy();}
        audio_play_sound(snd_Door, 10, false);
        }
    }
    
if (Key_Purple)
    {
    if (place_meeting(x+velocidad, y, obj_Door_Purple))||
    (place_meeting(x-velocidad, y, obj_Door_Purple))||
    (place_meeting(x, y+velocidad, obj_Door_Purple))||
    (place_meeting(x, y-velocidad, obj_Door_Purple))
        {
        with (obj_Door_Purple){instance_destroy();}
        audio_play_sound(snd_Door, 10, false);
        }
    }
    
if (Key_Silver)
    {
    if (place_meeting(x+velocidad, y, obj_Door_Silver))||
    (place_meeting(x-velocidad, y, obj_Door_Silver))||
    (place_meeting(x, y+velocidad, obj_Door_Silver))||
    (place_meeting(x, y-velocidad, obj_Door_Silver))
        {
        with (obj_Door_Silver){instance_destroy();}
        audio_play_sound(snd_Door, 10, false);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gestión Portales

/*Cuando toca la entrada del portal el personaje se transporta a la
    salida del portal*/
    
if(place_meeting(x, y, obj_Portal_Enter))
    {
    with(obj_Portal_Enter){instance_destroy()};
    audio_play_sound(snd_Diamond, 10, false);
    x = obj_Portal_exit.x;
    y = obj_Portal_exit.y;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Magic_Diamond">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_Diamond, 10, false);
score += 10;
with(other){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Enemy_Parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lives = lives - 1;
audio_play_sound(snd_Dead, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Goal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_Goal, 10, false);

if (room_exists(room_next(room)))
    {room_goto_next();}
    else
    {room_goto(Level1)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
